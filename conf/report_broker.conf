## enables external reporting
##
## External reporting is feature which allows you to collect trading data 
## into a database online and perform additional calculations as you need.
##
## There is several ways how to export live data from the robot
##
## The first, you can use report_broker, which executes as a separate process and receives
## trades.
##
## The second, you can use "ext_report" broker, which is configured as unified report_broker 
## and which sends trades using HTTP protocol to an external server (configured below)
##
## The report broker also have to generate a report which is then shown at the report
## page under menu item "Daily performance report".
##


[report]
## enable report broker. The value contains path to executable with some arguments. This
## config option is similar to the config options in the file brokers.conf 

# report_broker=../bin/brokers/ext_report report_broker.conf

## Set this option to yes if you want to include simulators into reports.

# include_simulators=yes


## Follows configuration of the 'ext_report' broker
#####################################################

[server]
## Examples written in the documentation uses CouchDB to collect data and generate reports
## You can find an example design document inside the section src/report/couchdb, which has been
## used to build these examples. 

## get_url-contains url which is used to retrieve daily performance report
## inside of the url, you can use %ident% to insert identification of this robot
## The request must return data as JSON
##
## {
##   "hdr": ["Date","col1","col2","col3"],
##   "rows: [[unix_timestamp, number, number, number],....],
##   "sums":[number, number, number]
## }
##
## The Date column is always the first column and each row must contain unix_timestamp of the
## row. The field "sums" doesn't contain "Date" - so there is one less item

# get_url=http://localhost:5984/mmbot/_design/control/_list/report/stats?reduce=true&group=true&start_key=["%ident%",0]&end_key=["%ident%",{}]

## post_url-contains url, which is used to send data about trades. The request is
## send for every trade which is loaded by the robot
## You can use %ident% to insert identification of this robot
## Trade data are send as JSON object
##{
##  "asset": "asset symbol",
##  "broker": "id of broker",
##  "change": <number: profit/loss>,
##  "currency": "currency symbol",
##  "ident": "identification",
##  "magic": <number: magic number which identifies this trader>,
##  "price": <number: price of execution>
##  "size": <number: size of executuion in assets +buy, -sell>,
##  "time": <number: timestamp in milliseconds>,
##  "tradeId": "trade identifier",
##  "uid": <nuumber: hidden random identifier of this trader>,
## }

# post_url=http://localhost:5984/mmbot/_design/control/_update/sendItem/rates

## post_method-specifies which method is used to send request
## You can specify POST or PUT

# post_method=PUT

## Contains path to a temporary file used to store data before they are delivered
## Because network can be slow, all received trades are stored there.
## then they are send to the server, which is performed at background.
## This helps with performance of the robot
##
## If the server is not available at the moment, the trades are stored and
## sent once the server becomes available

work_file=../data/report_work_file

## Include ident file

@include ident.conf

