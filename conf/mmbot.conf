[server]
# socket = path to file used as unix socket. The number specifies socket's permissions (mandatory field)
# listen = enables TCP port to listen connections. This is not necessery unless you need to connect
##         the server using TCP/IP connection. 
##         Security note: DO NOT EXPOSE SERVER TO PUBLIC INTERNET DIRECTLY (always use proxy - nginx, apache) 
# http_threads = specifies count of threads to serve http connections. 
# For local use, this number is enough, more threads needs more resources
# upload_limit_mb = limit for upload files in megabytes. Default is 10MB. You also need to increase
# www      path to www pages - (no default, must be specified) 
##               upload limit on proxy

socket=../run/mmbot.socket:666
# listen=localhost:11223
# http_threads=2
# upload_limit_mb=10
www=../www


[traders]
# threads = specifies count of threads to run traders.
##          NOTE: Using multiple threads can cause instabilities and it is still experimental
##                Also note that brokers cannot be accessed in parallel, so this option will not
##                change performance if you have multiple traders under single broker 

threads=1

[storage]
# storage_path = (mandatory) specifies path where user data are stored. 
# storage_binary = store in binary format. Binary format is smaller and more effective, but cannot be 
#                  inspected or edited by a human. if you need to inspect state files, turn off this
#                  option. The text format is JSON format
# storage_version = specifies count of last versions 
# storage_broker = use specified broker to store the user data (storage_path still must be specified)
# timeout        = defines timeout for storage_broker
# backup_localy  = when set to true, files sent to the broker are also stored locally. It also means, 
#                  that files can be read from local storage if they are missing on broker. You
#                  can use this option to transfer local data to the broker or vice versa

storage_path=../data
#storage_binary=true
#storage_versions=5
#storage_broker=
#timeout=10000
#backup_locally=false


[login]
# enables external authorization. You need specify JWT type and JWT public key 
# to authorize external sessions
# jwt_type = expected type of JWT token
# jwt_public = path to public key file (PEM format)
#
# the JWT token should have "sub" containing user id and "aud" filled with array of roles


#jwt_type=ES256
#jwt_public=public_key.pem


[log]
# file = log file
# level = log level: debug, info, note, progress, warning, error, fatal

file=../log/logfile
level=info

[report]
# broker = broker used to store statistics about trades
# timeout = timeout for the broker
# simulators = store also statistics for simulators (not recommended for production)

broker=../bin/brokers/rptbroker ../data/rptbroker.db
#timeout=10000
#simulators=false

[backtest]
# history_source = path to broker servers history data

#history_source=../bin/brokers/novacisko_data

## specifies size of backtest cache (in items). Default value is 8. 
## This allows to store data minute data or trades to run backtest, without need to reupload data
## for each attempt. The value specifies maximum number of data files stored on server. Once this
## value is reached, some old files are deleted, so data must be reuploaded later to run backtest again
## minimal value is 8
## note - cache can be temporary larger, because items are locked for 30sec after upload or use.
#
# backtest_cache_size=8
#
## by default, cached items are stored in temporary folder. By enabling this option, the items will
## be stored in memory. This can increase total memory allocation
#
# in_memory=false
 
[news]
## you can display platform news in robot's admin page
## the placeholder ${tm} is filled with a timestamp of last seen message

# url=https://www.mmbot.trade/main.api/news?tm=${tm}



@include brokers.conf

