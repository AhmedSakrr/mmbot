# General config rules
#
# The format of the configuration is similar to standard ini file
#
# [This is begin of section]
# key=value
# @directive <argumet>
# 
# Duplicate sections are merged
# Duplicate keys in the same sections replaces each other 
# If you need a multiline value, use backslash at the end \
#                               of line
#
#
# Directives can control how the configuration file is processed
#
# @include <relative_path>  - includes other file. Its content is merged with
#                             the current. 
#
# @template <name> - merges specified section to current section. The specified
#                            section acts as template, its keys are imported
#                            to current section. This reduces duplicated declarations
# 
# [aaa]
# a=1
# b=2
# c=3
#
# [bbb]
# @template aaa    - imports a,b,c into section [aaa]
# d=4




###########################################
#
# Paths: All paths can be relative to the configuration file where they appear.   
#
###########################################
# 
# Service settinggs
#
# inst_file              - specify path to an instance file (pid file)
#                          - this file identifies the service while it runs
#						   - the file is created on start
#                          - required
# 
# name                   - name of the service (appears on various places)
#
# user					 - switch to user after start
#

[service]
inst_file=../data/inst.pid

# user=mmbot

#
#  Enables logging
#
#  file                  - path to log file (it is created)
#  level                 - minimal level: debug, info, progress, note, warning, error, fatal
#
#  Note: option -d temporarily sets level to debug. Option -v redirects log to stdout 
#
[log]
file=../log/logfile
level=info

# 
# Trades common configuration 
# 
# storage_path           - path to directory where data files are stored
#
#

[traders]
storage_path=../data

#
# Report configuration
#
# path                  - path where reports are placed
# interval              - exports records not older than specified time in miliseconds
#
# http_bind				- enables local webserver to see results. The value specifies
#                         address and port where the content is served
#
#                         (use http://<http_bind>)
# http_auth 			- enable basic autentification. Specify one or more login
#                         tokens separated by a space. To generate login token, use
#                         following command
#
#                         $echo -n "login:password" | base64
#
# a2np					- counts accumulated assets as profit. 
#                         This causes that overlall normalized profit
#						  will partially copy development of the asset's price, because
#                         accumulated assets are part of the profit. 
#                         If this option is turned off while the options 
#                         `acum_factor_buy` and `acum_factor_sell` are set to 1 results
#						  accumulated profit to zero
#                         because all of the profit is used to accumulation. 
#                         Default is off
                 

[report]
path=../www

interval=864000000
# http_bind=127.0.0.1:11223
#
## echo -n "admin:secret" | base64
# http_auth=YWRtaW46c2VjcmV0
#



@include brokers.conf
@include traders.conf

